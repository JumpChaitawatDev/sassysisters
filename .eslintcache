[{"D:\\MyProject\\sassysisters\\src\\index.tsx":"1","D:\\MyProject\\sassysisters\\src\\reportWebVitals.ts":"2","D:\\MyProject\\sassysisters\\src\\App.tsx":"3","D:\\MyProject\\sassysisters\\src\\firebase\\init.js":"4","D:\\MyProject\\sassysisters\\src\\theme\\index.tsx":"5","D:\\MyProject\\sassysisters\\src\\layouts\\views\\nav.tsx":"6","D:\\MyProject\\sassysisters\\src\\layouts\\hooks\\useNav.ts":"7","D:\\MyProject\\sassysisters\\src\\layouts\\views\\sidebar.tsx":"8","D:\\MyProject\\sassysisters\\src\\constants\\menuList.ts":"9","D:\\MyProject\\sassysisters\\src\\components\\home\\views\\home.tsx":"10","D:\\MyProject\\sassysisters\\src\\components\\products\\views\\products.tsx":"11","D:\\MyProject\\sassysisters\\src\\components\\dashboard\\views\\dashboard.tsx":"12","D:\\MyProject\\sassysisters\\src\\components\\orders\\views\\orders.tsx":"13","D:\\MyProject\\sassysisters\\src\\store\\layoutStore.ts":"14","D:\\MyProject\\sassysisters\\src\\layouts\\views\\container.tsx":"15","D:\\MyProject\\sassysisters\\src\\components\\dashboard\\views\\budget.tsx":"16","D:\\MyProject\\sassysisters\\src\\components\\dashboard\\views\\totalCustomer.tsx":"17","D:\\MyProject\\sassysisters\\src\\components\\dashboard\\views\\salesRate.tsx":"18","D:\\MyProject\\sassysisters\\src\\components\\dashboard\\views\\totalProfit.tsx":"19","D:\\MyProject\\sassysisters\\src\\components\\dashboard\\views\\latestProducts.tsx":"20","D:\\MyProject\\sassysisters\\src\\components\\dashboard\\views\\latestOrders.tsx":"21"},{"size":537,"mtime":1612090112533,"results":"22","hashOfConfig":"23"},{"size":425,"mtime":499162500000,"results":"24","hashOfConfig":"23"},{"size":1036,"mtime":1612090112525,"results":"25","hashOfConfig":"23"},{"size":806,"mtime":1612000981708,"results":"26","hashOfConfig":"23"},{"size":763,"mtime":1612090112537,"results":"27","hashOfConfig":"23"},{"size":4229,"mtime":1612090112535,"results":"28","hashOfConfig":"23"},{"size":980,"mtime":1612090112534,"results":"29","hashOfConfig":"23"},{"size":2802,"mtime":1612090112535,"results":"30","hashOfConfig":"23"},{"size":73,"mtime":1612090112532,"results":"31","hashOfConfig":"23"},{"size":556,"mtime":1612090112530,"results":"32","hashOfConfig":"23"},{"size":685,"mtime":1612090112531,"results":"33","hashOfConfig":"23"},{"size":1838,"mtime":1612090112527,"results":"34","hashOfConfig":"23"},{"size":599,"mtime":1612090112531,"results":"35","hashOfConfig":"23"},{"size":275,"mtime":1612090112536,"results":"36","hashOfConfig":"23"},{"size":1074,"mtime":1612090112535,"results":"37","hashOfConfig":"23"},{"size":1839,"mtime":1612090112527,"results":"38","hashOfConfig":"23"},{"size":1932,"mtime":1612090112529,"results":"39","hashOfConfig":"23"},{"size":1838,"mtime":1612090112528,"results":"40","hashOfConfig":"23"},{"size":1306,"mtime":1612090112529,"results":"41","hashOfConfig":"23"},{"size":3717,"mtime":1612090112528,"results":"42","hashOfConfig":"23"},{"size":4132,"mtime":1612090112528,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hdhodf",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"51"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"51"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"51"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"51"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"51"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"51"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"51"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"51"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"51"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"51"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"51"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"D:\\MyProject\\sassysisters\\src\\index.tsx",[],"D:\\MyProject\\sassysisters\\src\\reportWebVitals.ts",[],["100","101"],"D:\\MyProject\\sassysisters\\src\\App.tsx",[],["102","103"],"D:\\MyProject\\sassysisters\\src\\firebase\\init.js",[],["104","105"],"D:\\MyProject\\sassysisters\\src\\theme\\index.tsx",["106","107"],"import { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { orange } from \"@material-ui/core/colors\";\r\n\r\ndeclare module \"@material-ui/core/styles/createMuiTheme\" {\r\n  interface Theme {\r\n    status: {\r\n      danger: string;\r\n    };\r\n  }\r\n  // allow configuration using `createMuiTheme`\r\n  interface ThemeOptions {\r\n    status?: {\r\n      danger?: string;\r\n    };\r\n  }\r\n}\r\n\r\nconst theme = createMuiTheme({\r\n  status: {\r\n    danger: orange[500],\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","D:\\MyProject\\sassysisters\\src\\layouts\\views\\nav.tsx",[],"D:\\MyProject\\sassysisters\\src\\layouts\\hooks\\useNav.ts",["108","109","110"],"import { useEffect, useState, useMemo } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useRecoilState } from \"recoil\";\n\nimport { drawerState } from \"../../store/layoutStore\";\n\ntype UsenavProps = {};\nconst useNav = (props: UsenavProps) => {\n  const [openDrawer, setOpenDrawer] = useRecoilState(drawerState);\n  const [openSidebar, setOpen] = useState(true);\n  const history = useHistory();\n\n  const toggleDrawer = (open: boolean) => (\n    event: React.KeyboardEvent | React.MouseEvent\n  ) => {\n    if (\n      event.type === \"keydown\" &&\n      ((event as React.KeyboardEvent).key === \"Tab\" ||\n        (event as React.KeyboardEvent).key === \"Shift\")\n    ) {\n      return;\n    }\n\n    setOpen(open);\n    setOpenDrawer(open);\n  };\n\n  const handleClickPage = (page: string) => {\n    history.push(\"/\" + page.toLowerCase());\n  };\n\n  return {\n    toggleDrawer,\n    openSidebar,\n    handleClickPage,\n  };\n};\nexport default useNav;\n","D:\\MyProject\\sassysisters\\src\\layouts\\views\\sidebar.tsx",["111","112"],"import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport useNav from \"../hooks/useNav\";\r\nimport { menuList } from \"../../constants/menuList\";\r\n\r\nconst drawerWidth = 240;\r\nconst avatar = process.env.PUBLIC_URL + \"/images/avatars/faii01.jpg\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  list: {\r\n    width: drawerWidth,\r\n  },\r\n  fullList: {\r\n    width: \"auto\",\r\n  },\r\n  large: {\r\n    width: theme.spacing(10),\r\n    height: theme.spacing(10),\r\n    marginTop: 10,\r\n    marginBottom: 20,\r\n  },\r\n  listItemAvatar: {\r\n    justifyContent: \"center\",\r\n  },\r\n  userName: {\r\n    fontWeight: \"bold\",\r\n    color: theme.palette.text.primary,\r\n  },\r\n}));\r\n\r\ntype ReturnTypeUsesidebar = ReturnType<typeof useNav>;\r\n\r\ntype sidebarViewProps = ReturnTypeUsesidebar & {};\r\nlet SidebarView: React.FC<sidebarViewProps> = ({\r\n  toggleDrawer,\r\n  openSidebar,\r\n  handleClickPage,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Drawer\r\n        anchor={\"left\"}\r\n        variant=\"persistent\"\r\n        open={openSidebar}\r\n        onClose={toggleDrawer(false)}\r\n      >\r\n        <List className={classes.list}>\r\n          <ListItem alignItems=\"center\" className={classes.listItemAvatar}>\r\n            <div>\r\n              <Avatar alt=\"Faii\" src={avatar} className={classes.large} />\r\n              <Typography variant=\"body1\" className={classes.userName}>\r\n                {\"Faii Kulbun\"}\r\n              </Typography>\r\n            </div>\r\n          </ListItem>\r\n        </List>\r\n        <Divider />\r\n        <List className={classes.list}>\r\n          {menuList.map((text, index) => (\r\n            <ListItem button key={text} onClick={() => handleClickPage(text)}>\r\n              <ListItemIcon>\r\n                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n              </ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n};\r\n\r\ntype sidebarProps = Omit<sidebarViewProps, keyof ReturnTypeUsesidebar>;\r\nlet Sidebar: React.FC<sidebarProps & ReturnTypeUsesidebar> = ({\r\n  ...others\r\n}) => {\r\n  return <SidebarView {...others} />;\r\n};\r\n\r\nexport default Sidebar;\r\n","D:\\MyProject\\sassysisters\\src\\constants\\menuList.ts",[],"D:\\MyProject\\sassysisters\\src\\components\\home\\views\\home.tsx",["113","114"],"import React from \"react\";\r\n\r\ntype UsehomeProps = {};\r\ntype ReturnTypeUsehome = ReturnType<typeof usehome>;\r\nfunction usehome(props: UsehomeProps) {\r\n  const {} = props;\r\n  return {};\r\n}\r\n\r\ntype homeViewProps = ReturnTypeUsehome & {};\r\nlet HomeView: React.FC<homeViewProps> = ({}) => {\r\n  return <>homeView 2</>;\r\n};\r\n\r\ntype homeProps = UsehomeProps & Omit<homeViewProps, keyof ReturnTypeUsehome>;\r\nlet Home: React.FC<homeProps> = ({ ...others }) => {\r\n  const home = usehome({});\r\n  return <HomeView {...home} {...others} />;\r\n};\r\n\r\nexport default Home;\r\n","D:\\MyProject\\sassysisters\\src\\components\\products\\views\\products.tsx",["115","116"],"import React from \"react\";\n\ntype UseproductsViewProps = {};\ntype ReturnTypeUseproductsView = ReturnType<typeof useproductsView>;\nfunction useproductsView(props: UseproductsViewProps) {\n  const {} = props;\n  return {};\n}\n\ntype productsViewProps = ReturnTypeUseproductsView & {};\nlet ProductsView: React.FC<productsViewProps> = ({}) => {\n  return <>ProductsView</>;\n};\n\ntype productsProps = UseproductsViewProps &\n  Omit<productsViewProps, keyof ReturnTypeUseproductsView>;\nlet Products: React.FC<productsProps> = ({ ...others }) => {\n  const productsView = useproductsView({});\n  return <ProductsView {...productsView} {...others} />;\n};\n\nexport default Products;\n","D:\\MyProject\\sassysisters\\src\\components\\dashboard\\views\\dashboard.tsx",["117","118"],"import React from \"react\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport Budget from \"./budget\";\r\nimport TotalCustomer from \"./totalCustomer\";\r\nimport SalesRate from \"./salesRate\";\r\nimport TotalProfit from \"./totalProfit\";\r\n\r\nimport LatestProducts from \"./latestProducts\";\r\nimport LatestOrders from \"./latestOrders\";\r\n\r\ntype UsedashboardProps = {};\r\ntype ReturnTypeUsedashboard = ReturnType<typeof usedashboard>;\r\nfunction usedashboard(props: UsedashboardProps) {\r\n  const {} = props;\r\n  return {};\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      textAlign: \"center\",\r\n      color: theme.palette.text.secondary,\r\n    },\r\n  })\r\n);\r\n\r\ntype dashboardViewProps = ReturnTypeUsedashboard & {};\r\nlet DashboardView: React.FC<dashboardViewProps> = ({}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={3}>\r\n          <Budget />\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <TotalCustomer />\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <SalesRate />\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <TotalProfit />\r\n        </Grid>\r\n\r\n        <Grid item xs={3}>\r\n          <LatestProducts />\r\n        </Grid>\r\n        <Grid item xs={9}>\r\n          <LatestOrders />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\ntype dashboardProps = UsedashboardProps &\r\n  Omit<dashboardViewProps, keyof ReturnTypeUsedashboard>;\r\nlet Dashboard: React.FC<dashboardProps> = ({ ...others }) => {\r\n  const dashboard = usedashboard({});\r\n  return <DashboardView {...dashboard} {...others} />;\r\n};\r\n\r\nexport default Dashboard;\r\n","D:\\MyProject\\sassysisters\\src\\components\\orders\\views\\orders.tsx",["119","120"],"import React from \"react\";\r\n\r\ntype UseordersProps = {};\r\ntype ReturnTypeUseorders = ReturnType<typeof useorders>;\r\nfunction useorders(props: UseordersProps) {\r\n  const {} = props;\r\n  return {};\r\n}\r\n\r\ntype ordersViewProps = ReturnTypeUseorders & {};\r\nlet OrdersView: React.FC<ordersViewProps> = ({}) => {\r\n  return <>ordersView</>;\r\n};\r\n\r\ntype ordersProps = UseordersProps &\r\n  Omit<ordersViewProps, keyof ReturnTypeUseorders>;\r\nlet Orders: React.FC<ordersProps> = ({ ...others }) => {\r\n  const orders = useorders({});\r\n  return <OrdersView {...orders} {...others} />;\r\n};\r\n\r\nexport default Orders;\r\n","D:\\MyProject\\sassysisters\\src\\store\\layoutStore.ts",["121","122","123","124"],"import {\r\n  RecoilRoot,\r\n  atom,\r\n  selector,\r\n  useRecoilState,\r\n  useRecoilValue,\r\n} from \"recoil\";\r\n\r\nexport const drawerState = atom({\r\n  key: \"openDrawer\", // unique ID (with respect to other atoms/selectors)\r\n  default: true, // default value (aka initial value)\r\n});\r\n","D:\\MyProject\\sassysisters\\src\\layouts\\views\\container.tsx",["125"],"import React from \"react\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { drawerState } from \"../../store/layoutStore\";\r\n\r\ntype UsecontainerProps = {};\r\ntype ReturnTypeUsecontainer = ReturnType<typeof usecontainer>;\r\nfunction usecontainer(props: UsecontainerProps) {\r\n  const {} = props;\r\n  return {};\r\n}\r\n\r\ntype containerViewProps = ReturnTypeUsecontainer & {};\r\nlet ContainerView: React.FC<containerViewProps> = ({ children }) => {\r\n  const openSidebar = useRecoilValue(drawerState);\r\n  return (\r\n    <div\r\n      style={{\r\n        padding: 30,\r\n        paddingTop: 94,\r\n        background: \"#F4F6F8\",\r\n        marginLeft: openSidebar ? 240 : 0,\r\n        minHeight: \"calc(100vh - 124px)\",\r\n        height: \"100%\",\r\n      }}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\ntype containerProps = UsecontainerProps &\r\n  Omit<containerViewProps, keyof ReturnTypeUsecontainer>;\r\nlet Container: React.FC<containerProps> = ({ ...others }) => {\r\n  const container = usecontainer({});\r\n  return <ContainerView {...container} {...others} />;\r\n};\r\n\r\nexport default Container;\r\n","D:\\MyProject\\sassysisters\\src\\components\\dashboard\\views\\budget.tsx",[],"D:\\MyProject\\sassysisters\\src\\components\\dashboard\\views\\totalCustomer.tsx",["126"],"import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n  colors,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\r\nimport PeopleIcon from \"@material-ui/icons/PeopleOutlined\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100%\",\r\n  },\r\n  avatar: {\r\n    backgroundColor: colors.green[600],\r\n    height: 56,\r\n    width: 56,\r\n  },\r\n  differenceIcon: {\r\n    color: colors.green[900],\r\n  },\r\n  differenceValue: {\r\n    color: colors.green[900],\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\ntype TotalCustomersPropsType = {\r\n  className?: string;\r\n};\r\nconst TotalCustomers: React.FC<TotalCustomersPropsType> = ({\r\n  className,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <CardContent>\r\n        <Grid container justify=\"space-between\" spacing={3}>\r\n          <Grid item>\r\n            <Typography color=\"textSecondary\" gutterBottom variant=\"h6\">\r\n              Total Customer\r\n            </Typography>\r\n            <Typography color=\"textPrimary\" variant=\"h4\">\r\n              1,600\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar className={classes.avatar}>\r\n              <PeopleIcon />\r\n            </Avatar>\r\n          </Grid>\r\n        </Grid>\r\n        <Box mt={2} display=\"flex\" alignItems=\"center\">\r\n          <ArrowUpwardIcon className={classes.differenceIcon} />\r\n          <Typography className={classes.differenceValue} variant=\"body2\">\r\n            16%\r\n          </Typography>\r\n          <Typography color=\"textSecondary\" variant=\"caption\">\r\n            Since last month\r\n          </Typography>\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TotalCustomers;\r\n","D:\\MyProject\\sassysisters\\src\\components\\dashboard\\views\\salesRate.tsx",[],"D:\\MyProject\\sassysisters\\src\\components\\dashboard\\views\\totalProfit.tsx",["127"],"import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Avatar,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n  makeStyles,\r\n  colors,\r\n} from \"@material-ui/core\";\r\nimport AttachMoneyIcon from \"@material-ui/icons/AttachMoney\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    height: \"100%\",\r\n  },\r\n  avatar: {\r\n    backgroundColor: colors.indigo[600],\r\n    height: 56,\r\n    width: 56,\r\n  },\r\n}));\r\n\r\ntype BudgetPropsType = {\r\n  className?: string;\r\n};\r\nconst TotalProfit: React.FC<BudgetPropsType> = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <CardContent>\r\n        <Grid container justify=\"space-between\" spacing={3}>\r\n          <Grid item>\r\n            <Typography color=\"textSecondary\" gutterBottom variant=\"h6\">\r\n              Total Profit\r\n            </Typography>\r\n            <Typography color=\"textPrimary\" variant=\"h4\">\r\n              $23,200\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar className={classes.avatar}>\r\n              <AttachMoneyIcon />\r\n            </Avatar>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TotalProfit;\r\n","D:\\MyProject\\sassysisters\\src\\components\\dashboard\\views\\latestProducts.tsx",[],"D:\\MyProject\\sassysisters\\src\\components\\dashboard\\views\\latestOrders.tsx",[],{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"128","replacedBy":"132"},{"ruleId":"130","replacedBy":"133"},{"ruleId":"128","replacedBy":"132"},{"ruleId":"130","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":2,"column":10,"nodeType":"136","messageId":"137","endLine":2,"endColumn":14},{"ruleId":"134","severity":1,"message":"138","line":2,"column":16,"nodeType":"136","messageId":"137","endLine":2,"endColumn":22},{"ruleId":"134","severity":1,"message":"139","line":1,"column":10,"nodeType":"136","messageId":"137","endLine":1,"endColumn":19},{"ruleId":"134","severity":1,"message":"140","line":1,"column":31,"nodeType":"136","messageId":"137","endLine":1,"endColumn":38},{"ruleId":"134","severity":1,"message":"141","line":9,"column":10,"nodeType":"136","messageId":"137","endLine":9,"endColumn":20},{"ruleId":"134","severity":1,"message":"142","line":2,"column":8,"nodeType":"136","messageId":"137","endLine":2,"endColumn":12},{"ruleId":"134","severity":1,"message":"143","line":5,"column":8,"nodeType":"136","messageId":"137","endLine":5,"endColumn":14},{"ruleId":"144","severity":1,"message":"145","line":6,"column":9,"nodeType":"146","messageId":"147","endLine":6,"endColumn":11},{"ruleId":"144","severity":1,"message":"145","line":11,"column":42,"nodeType":"146","messageId":"147","endLine":11,"endColumn":44},{"ruleId":"144","severity":1,"message":"145","line":6,"column":9,"nodeType":"146","messageId":"147","endLine":6,"endColumn":11},{"ruleId":"144","severity":1,"message":"145","line":11,"column":50,"nodeType":"146","messageId":"147","endLine":11,"endColumn":52},{"ruleId":"144","severity":1,"message":"145","line":16,"column":9,"nodeType":"146","messageId":"147","endLine":16,"endColumn":11},{"ruleId":"144","severity":1,"message":"145","line":34,"column":52,"nodeType":"146","messageId":"147","endLine":34,"endColumn":54},{"ruleId":"144","severity":1,"message":"145","line":6,"column":9,"nodeType":"146","messageId":"147","endLine":6,"endColumn":11},{"ruleId":"144","severity":1,"message":"145","line":11,"column":46,"nodeType":"146","messageId":"147","endLine":11,"endColumn":48},{"ruleId":"134","severity":1,"message":"148","line":2,"column":3,"nodeType":"136","messageId":"137","endLine":2,"endColumn":13},{"ruleId":"134","severity":1,"message":"149","line":4,"column":3,"nodeType":"136","messageId":"137","endLine":4,"endColumn":11},{"ruleId":"134","severity":1,"message":"150","line":5,"column":3,"nodeType":"136","messageId":"137","endLine":5,"endColumn":17},{"ruleId":"134","severity":1,"message":"151","line":6,"column":3,"nodeType":"136","messageId":"137","endLine":6,"endColumn":17},{"ruleId":"144","severity":1,"message":"145","line":8,"column":9,"nodeType":"146","messageId":"147","endLine":8,"endColumn":11},{"ruleId":"134","severity":1,"message":"152","line":3,"column":8,"nodeType":"136","messageId":"137","endLine":3,"endColumn":17},{"ruleId":"134","severity":1,"message":"152","line":3,"column":8,"nodeType":"136","messageId":"137","endLine":3,"endColumn":17},"no-native-reassign",["153"],"no-negated-in-lhs",["154"],["153"],["154"],"@typescript-eslint/no-unused-vars","'grey' is defined but never used.","Identifier","unusedVar","'purple' is defined but never used.","'useEffect' is defined but never used.","'useMemo' is defined but never used.","'openDrawer' is assigned a value but never used.","'clsx' is defined but never used.","'Button' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'RecoilRoot' is defined but never used.","'selector' is defined but never used.","'useRecoilState' is defined but never used.","'useRecoilValue' is defined but never used.","'PropTypes' is defined but never used.","no-global-assign","no-unsafe-negation"]